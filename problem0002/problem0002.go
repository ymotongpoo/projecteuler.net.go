// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values
// do not exceed four million, find the sum of the even-valued terms.
package main

import (
	"fmt"
)

func Fibonacci(n int) chan int {
	var queue chan int
	go fibonacci(n, 1, 2, queue)
	return queue
}

func fibonacci(n, p, c int, queue chan int) {
	switch {
	case 0:
		return
	case 1:
		queue <- 1
	case 2:
		queue <- 2
	case n > 0:
		queue <- p + c
	default:
		fmt.Errorf("wrong number: %v\n", n)
	}
	fibonacci(n-1, c, c+p, queue)
}
