// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values
// do not exceed four million, find the sum of the even-valued terms.
package main

import (
	"fmt"
)

const Limit = 4000000

func Fibonacci(c, quit chan int) {
	x, y := 1, 2
	for {
		select {
		case c <- x:
			x, y = y, x+y
		case <-quit:
			return
		}
	}
}

func main() {
	c := make(chan int)
	quit := make(chan int)

	sum := 0
	var value int
	go func() {
		for {
			value = <-c
			if value < Limit {
				if value%2 == 0 {
					sum += value
				}
			} else {
				quit <- 0
			}
		}
	}()
	Fibonacci(c, quit)
	fmt.Println(sum)
}
